<?xml version="1.0"?>

<robot xmlns:xacro="http://ros.org/wiki/xacro">

    
    <xacro:property name="PI" value="3.141592" />

    <xacro:property name="b2l_x" value="0.0" />
    <xacro:property name="b2l_y" value="0.0" />
    <xacro:property name="b2l_z" value="0.065" />
    <xacro:property name="b2l_R" value="0.0" />
    <xacro:property name="b2l_P" value="0.0" />
    <xacro:property name="b2l_Y" value="0.0" />
    <xacro:property name="lidar_mass" value="0.125" />
    <xacro:property name="lidar_len_rad" value="0.0508" />
    <xacro:property name="lidar_len_h" value="0.055" />
    <xacro:include filename="$(find mulinex_description)/urdf/base_inertia.xacro" />
    
    <xacro:macro name="lidar_sensor" params="tredi namespace">
        <joint name="base2lidar" type="fixed">
            <parent link="base_link"/>
            <child link="lidar_link"/>
            <origin xyz="${b2l_x} ${b2l_y} ${b2l_z}" rpy="${b2l_R} ${b2l_P} ${b2l_Y}"/>
        </joint>
        <link name="lidar_link">
            <collision>
                <origin xyz="0 0 0" rpy="0 0 0"/>
                <geometry>
                    <cylinder radius="${lidar_len_rad}" length="${lidar_len_h}"/>
                </geometry>
            </collision>

            <visual>
                <origin xyz="0 0 0" rpy="0 0 0"/>
                <geometry>
                    <cylinder radius="${lidar_len_rad}" length="${lidar_len_h}"/>
                </geometry>
                <material name="orange"/>
            </visual>
            
            <xacro:cylinder_inertia m="${lidar_mass}" r="${lidar_len_rad}" h="${lidar_len_h}" dir="z"/>
            
        </link>
        <gazebo reference="lidar_link">
            <sensor name="RGLsensor" type="custom">
                <plugin filename="RGLServerPluginInstance" name="rgl::RGLServerPluginInstance">
                    <range>
                    <min>0</min>
                    <max>100</max>
                    </range>
                    <update_rate>10</update_rate>
                    <update_on_paused_sim>false</update_on_paused_sim>
                    <topic>${namespace}/rgl_lidar</topic>
                    <frame>${namespace}/lidar_link</frame>
                    <pattern_preset>Puck</pattern_preset>
                </plugin>
            </sensor>
            <!-- <sensor name="lidar" type="gpu_lidar">
                <ignition_frame_id>lidar_link</ignition_frame_id>
                <topic>lidar</topic>
                <always_on>true</always_on>
                <visualize>true</visualize>
                <update_rate>50</update_rate>
                <plugin
                    filename="libignition-gazebo-sensors-system.so"
                    name="ignition::gazebo::systems::Sensors">
                    <render_engine>ogre2</render_engine>
                </plugin>
                <xacro:if value="${tredi}">
                    <ray>
                        <scan>
                            <horizontal>
                                <samples>900</samples>
                                <resolution>1.000000</resolution>
                                <min_angle>0.000000</min_angle>
                                <max_angle>6.280000</max_angle>
                            </horizontal>
                            <vertical>
                                <samples>15</samples>
                                <resolution>1</resolution>
                                <min_angle>-0.261799</min_angle>
                                <max_angle>0.261799</max_angle>
                            </vertical>
                        </scan>
                    <range>
                        <min>0.1</min>
                        <max>100.0</max>
                        <resolution>0.015000</resolution>
                    </range>
                    <noise>
                        <type>gaussian</type>
                        <mean>0.0</mean>
                        <stddev>0.008</stddev>
                    </noise>
                </ray>
                </xacro:if>
                <xacro:unless value="${tredi}">
                <ray>
                    <scan>
                    <horizontal>
                        <samples>360</samples>
                        <resolution>1.000000</resolution>
                        <min_angle>0.000000</min_angle>
                        <max_angle>6.280000</max_angle>
                    </horizontal>
                    </scan>
                        <range>
                        <min>0.120000</min>
                        <max>3.5</max>
                        <resolution>0.015000</resolution>
                    </range>
                    <noise>
                        <type>gaussian</type>
                        <mean>0.0</mean>
                        <stddev>0.01</stddev>
                    </noise>
                </ray>
                </xacro:unless>
            </sensor> -->
        </gazebo>
        
    </xacro:macro>

</robot>